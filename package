#! /usr/bin/env python3

import os

print('Welcome to the Workiva Platform!')

# TODO: look for a Dockerfile parser that enables access to EXPOSEd ports
ports = [
    int(p)
    for l in open('Dockerfile').readlines()
    for p in l[len('EXPOSE '):].strip().split()
    if l.startswith('EXPOSE')
]
port = None
if not len(ports):
    print('No PORT Detected in Dockerfile: Using 8888')
    port = 8888
else:
    print('Found exposed ports: %s; Using %d for readiness probe' % (ports, ports[0]))
    port = ports[0]


print('Building HELM Artifacts...')

# TODO: append liveness checks if not present

# The readinessProbe defines when your service is considered ready for traffic.
# See: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
defaultReadinessProbe = """
readinessProbe:
  httpGet:
    path: /_wk/ready
    port: {port}
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3
"""

# Used to determine when to restart a Container.
# See: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
defaultLivenessProbe = """
livenessProbe:
  httpGet:
    path: /_wk/alive
    port: {port}
  initialDelaySeconds: 10
  periodSeconds: 10
"""

for dirpath, _, filenames in os.walk('.'):
    if 'values.yaml' not in filenames:
        continue
    file = os.sep.join([dirpath, 'values.yaml'])
    if not any([l.startswith('readinessProbe:') for l in open(file).readlines()]):
        open(file, 'a').write(defaultReadinessProbe.format(port=port))
    if not any([l.startswith('livenessProbe:') for l in open(file).readlines()]):
        open(file, 'a').write(defaultLivenessProbe.format(port=port))

os.system('helm package */')
print('DONE!')

print('Your Service is now ready for Deployment through Release Pipelines')
